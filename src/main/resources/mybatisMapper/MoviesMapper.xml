<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sgay.giligili.dao.MovieMapper">
  <cache/>
  <resultMap id="BaseResultMap" type="com.sgay.giligili.entity.Movie">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="fanhao" jdbcType="VARCHAR" property="fanhao" />
    <result column="imgHref" jdbcType="VARCHAR" property="imghref" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="publishTime" jdbcType="DATE" property="publishtime" />
    <result column="viewsNum" jdbcType="BIGINT" property="viewsnum" />
    <result column="likesNum" jdbcType="BIGINT" property="likesnum" />
    <result column="teacher" jdbcType="VARCHAR" property="teacher" />
    <result column="recommend" jdbcType="BIT" property="recommend" />
  </resultMap>
  <sql id="Base_Column_List">
    id, fanhao, imgHref, title, publishTime, viewsNum, likesNum, teacher, recommend
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from movies
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from movies
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sgay.giligili.entity.Movie">
    insert into movies (id, fanhao, imgHref, 
      title, publishTime, viewsNum, 
      likesNum, teacher, recommend
      )
    values (#{id,jdbcType=BIGINT}, #{fanhao,jdbcType=VARCHAR}, #{imghref,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{publishtime,jdbcType=DATE}, #{viewsnum,jdbcType=BIGINT}, 
      #{likesnum,jdbcType=BIGINT}, #{teacher,jdbcType=VARCHAR}, #{recommend,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sgay.giligili.entity.Movie">
    insert into movies
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fanhao != null">
        fanhao,
      </if>
      <if test="imghref != null">
        imgHref,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="publishtime != null">
        publishTime,
      </if>
      <if test="viewsnum != null">
        viewsNum,
      </if>
      <if test="likesnum != null">
        likesNum,
      </if>
      <if test="teacher != null">
        teacher,
      </if>
      <if test="recommend != null">
        recommend,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fanhao != null">
        #{fanhao,jdbcType=VARCHAR},
      </if>
      <if test="imghref != null">
        #{imghref,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="publishtime != null">
        #{publishtime,jdbcType=DATE},
      </if>
      <if test="viewsnum != null">
        #{viewsnum,jdbcType=BIGINT},
      </if>
      <if test="likesnum != null">
        #{likesnum,jdbcType=BIGINT},
      </if>
      <if test="teacher != null">
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="recommend != null">
        #{recommend,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sgay.giligili.entity.Movie">
    update movies
    <set>
      <if test="fanhao != null">
        fanhao = #{fanhao,jdbcType=VARCHAR},
      </if>
      <if test="imghref != null">
        imgHref = #{imghref,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="publishtime != null">
        publishTime = #{publishtime,jdbcType=DATE},
      </if>
      <if test="viewsnum != null">
        viewsNum = #{viewsnum,jdbcType=BIGINT},
      </if>
      <if test="likesnum != null">
        likesNum = #{likesnum,jdbcType=BIGINT},
      </if>
      <if test="teacher != null">
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="recommend != null">
        recommend = #{recommend,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sgay.giligili.entity.Movie">
    update movies
    set fanhao = #{fanhao,jdbcType=VARCHAR},
      imgHref = #{imghref,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      publishTime = #{publishtime,jdbcType=DATE},
      viewsNum = #{viewsnum,jdbcType=BIGINT},
      likesNum = #{likesnum,jdbcType=BIGINT},
      teacher = #{teacher,jdbcType=VARCHAR},
      recommend = #{recommend,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectRecommendMovies" resultType="com.sgay.giligili.entity.Movie">
    select
    <include refid="Base_Column_List" />
    from movies
    where recommend = TRUE
  </select>

  <select id="selectMoviesByTeacherName" parameterType="java.lang.String" resultType="com.sgay.giligili.entity.Movie">
    select
    <include refid="Base_Column_List" />
    from movies
    where teacher = #{teacherName,jdbcType=VARCHAR}
    ORDER BY viewsNum DESC
  </select>

  <select id="selectMovieByFanhao" parameterType="java.lang.String" resultType="com.sgay.giligili.entity.Movie">
    select
    <include refid="Base_Column_List" />
    from movies
    where fanhao = #{movieName,jdbcType=VARCHAR}
  </select>

</mapper>