<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sgay.giligili.dao.TorrentDetailMapper" >
  <resultMap id="BaseResultMap" type="com.sgay.giligili.entity.TorrentDetail" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="torrentName" property="torrentname" jdbcType="VARCHAR" />
    <result column="torrentSize" property="torrentsize" jdbcType="VARCHAR" />
    <result column="torrentUploadTime" property="torrentuploadtime" jdbcType="VARCHAR" />
    <result column="torrentMagnet" property="torrentmagnet" jdbcType="VARCHAR" />
    <result column="keyword" property="keyword" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id,torrentName, torrentSize, torrentUploadTime, torrentMagnet, keyword
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from torrent_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getTorrentDetailList" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from torrent_detail
    where keyword = #{keyword,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from torrent_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sgay.giligili.entity.TorrentDetail" >
    insert into torrent_detail (id, torrentName, torrentSize, 
      torrentUploadTime, torrentMagnet, keyword
      )
    values (#{id,jdbcType=BIGINT}, #{torrentname,jdbcType=VARCHAR}, #{torrentsize,jdbcType=VARCHAR}, 
      #{torrentuploadtime,jdbcType=VARCHAR}, #{torrentmagnet,jdbcType=VARCHAR}, #{keyword,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sgay.giligili.entity.TorrentDetail" >
    insert into torrent_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="torrentname != null" >
        torrentName,
      </if>
      <if test="torrentsize != null" >
        torrentSize,
      </if>
      <if test="torrentuploadtime != null" >
        torrentUploadTime,
      </if>
      <if test="torrentmagnet != null" >
        torrentMagnet,
      </if>
      <if test="keyword != null" >
        keyword,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="torrentname != null" >
        #{torrentname,jdbcType=VARCHAR},
      </if>
      <if test="torrentsize != null" >
        #{torrentsize,jdbcType=VARCHAR},
      </if>
      <if test="torrentuploadtime != null" >
        #{torrentuploadtime,jdbcType=VARCHAR},
      </if>
      <if test="torrentmagnet != null" >
        #{torrentmagnet,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null" >
        #{keyword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sgay.giligili.entity.TorrentDetail" >
    update torrent_detail
    <set >
      <if test="torrentname != null" >
        torrentName = #{torrentname,jdbcType=VARCHAR},
      </if>
      <if test="torrentsize != null" >
        torrentSize = #{torrentsize,jdbcType=VARCHAR},
      </if>
      <if test="torrentuploadtime != null" >
        torrentUploadTime = #{torrentuploadtime,jdbcType=VARCHAR},
      </if>
      <if test="torrentmagnet != null" >
        torrentMagnet = #{torrentmagnet,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null" >
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sgay.giligili.entity.TorrentDetail" >
    update torrent_detail
    set torrentName = #{torrentname,jdbcType=VARCHAR},
      torrentSize = #{torrentsize,jdbcType=VARCHAR},
      torrentUploadTime = #{torrentuploadtime,jdbcType=VARCHAR},
      torrentMagnet = #{torrentmagnet,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>